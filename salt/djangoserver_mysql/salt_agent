#!/home/{{ user }}/{{ django }}/{{ env }}/bin/python3

#This file is not part of django. It was only used for saltstack to conf the project. It can be safely removed.

from subprocess import call
import sys

message = "1"
    

if {{ stage }} == 1:
    
    call([sys.executable, '-m', 'pip', 'install', 'mysql-connector-python']) 
    
    import mysql.connector as con
    
    try:
        db = con.connect(host="localhost", user="root", password="{{ pillar["mysqlpass"] }}")
        cursor = db.cursor()
        cursor.execute("CREATE DATABASE {{ pillar["dbname"] }}")

    except mysql.connector.Error as exp:
        message = exp
    except Exception:
        message = Exception.message
    finally:
        db.close()
        call([sys.executable,"-m","pip","uninstall","mysql-connector-python"])

    call([sys.executable,"-m","pip","install","django==2.1"])
    call([sys.executable,"-m","pip","install","mysqlclient"])
    call(["/home/{{ user }}/{{ django}}/{{ env }}/bin/django-admin","startproject","{{ project }}","/home/{{ user }}/{{ django }}"])

    
    if message == "1":
        print()
        print("comment='stage 1 succesful'")
    else:
        print("comment='stage 1 succesfull. mysql status {}'".format(message))

else: 
     
     call([sys.executable,"/home/{{ user }}/{{ django }}/manage.py","collectstatic"])
     call([sys.executable, "/home/{{ user }}/{{ django }}/manage.py","makemigrations"])
     call([sys.executable, "/home/{{ user }}/{{ django }}/manage.py","migrate"])

     print()
     print("comment='stage 2 succesful'")



